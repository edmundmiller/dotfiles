#!/usr/bin/env -S just --justfile
# A modular interface to nix-darwin/nixos operations using JustScripts
# Inspired by Henrik Lissner's dotfiles

import 'hey.d/common.just'
import 'hey.d/rebuild.just'
import 'hey.d/flake.just'
import 'hey.d/nix.just'

# Default recipe - show help
default: help

# Show help message
help:
    @echo "Usage: hey <command> [args...] (powered by just)"
    @echo ""
    @echo "System Commands:"
    @echo "  rebuild, re [args]    Rebuild the system (default: switch)"
    @echo "  test [args]          Build and activate but don't add to boot menu"
    @echo "  rollback             Roll back to previous generation"
    @echo ""
    @echo "Flake Commands:"
    @echo "  update, u [inputs]   Update flake inputs (all if none specified)"
    @echo "  upgrade              Update inputs and rebuild system"
    @echo "  check                Run flake checks"
    @echo "  show                 Show flake outputs"
    @echo ""
    @echo "Nix Commands:"
    @echo "  gc                   Run garbage collection"
    @echo "  repl                 Open nix repl with flake loaded"
    @echo "  search <query>       Search nixpkgs for packages"
    @echo "  shell <package>      Start shell with package available"
    @echo ""
    @echo "Examples:"
    @echo "  hey rebuild          # Rebuild and switch"
    @echo "  hey test             # Test build without switching"
    @echo "  hey update nixpkgs   # Update only nixpkgs input"
    @echo "  hey search firefox   # Search for firefox packages"
    @echo "  hey shell hello      # Start shell with hello package"
    @echo ""
    @echo "Current flake host: {{flake_host}}"
    @echo "Platform: $(if {{is_darwin}}; then echo Darwin; else echo NixOS; fi)"