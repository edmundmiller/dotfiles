#!/usr/bin/env python3
"""
Nextflow slash command for Claude Code
Provides context-aware assistance for Nextflow workflows and pipelines
"""

import subprocess
import sys
import json

def get_nextflow_context():
    """Get Nextflow documentation context via Context7"""
    try:
        # Use Context7 to get Nextflow documentation
        result = subprocess.run([
            'claude-code-mcp', 'context7', 'get-library-docs',
            '/nextflow-io/nextflow', '--tokens', '8000'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            return result.stdout
        else:
            return "Error retrieving Nextflow documentation"
    except Exception as e:
        return f"Error: {str(e)}"

def main():
    if len(sys.argv) < 2:
        print("Usage: /nextflow <query>")
        print("Examples:")
        print("  /nextflow process syntax")
        print("  /nextflow channel operations")
        print("  /nextflow docker configuration")
        sys.exit(1)

    query = " ".join(sys.argv[1:])
    
    # Get Nextflow context
    context = get_nextflow_context()
    
    # Create a comprehensive prompt with context
    prompt = f"""You are a Nextflow expert assistant. Help the user with their Nextflow question using the following context:

CONTEXT:
{context}

USER QUERY: {query}

Please provide a helpful, accurate response about Nextflow based on the context above. Include relevant code examples when appropriate.
"""

    print(prompt)

if __name__ == "__main__":
    main()