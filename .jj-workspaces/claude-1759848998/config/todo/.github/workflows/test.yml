name: Tests

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'tracktime'
      - 'tests/**'
      - 'lib/**'
      - '.github/workflows/test.yml'
  push:
    branches: [ main, master ]
    paths:
      - 'tracktime'
      - 'tests/**'
      - 'lib/**'
      - '.github/workflows/test.yml'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y kcov coreutils

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # kcov not easily available on macOS, skip coverage there
        echo "macOS test run - coverage will be generated on Ubuntu only"

    - name: Verify bash version
      run: |
        echo "Bash version:"
        bash --version

    - name: Make bashunit executable
      run: chmod +x lib/bashunit

    - name: Run tracktime tests (Ubuntu with coverage)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "Running tests with coverage on Ubuntu..."
        mkdir -p coverage
        
        # Run both test suites
        ./lib/bashunit tests/tracktime_test.sh
        ./lib/bashunit tests/tracktime_additional_test.sh
        
        # Run with kcov coverage if available
        if command -v kcov >/dev/null 2>&1; then
          echo "Generating coverage report..."
          kcov --verify \
               --include-path=. \
               --exclude-path=lib,tests \
               coverage \
               ./lib/bashunit tests/tracktime_test.sh tests/tracktime_additional_test.sh || true
               
          # Display coverage summary
          if [ -f coverage/index.html ]; then
            echo "Coverage report generated successfully"
            # Extract coverage percentage if available
            if [ -f coverage/kcov-merged/coverage.json ]; then
              echo "Coverage summary available in JSON format"
            fi
          fi
        else
          echo "kcov not available, running tests without coverage"
        fi

    - name: Run tracktime tests (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo "Running tests on macOS..."
        # Run both test suites
        ./lib/bashunit tests/tracktime_test.sh
        ./lib/bashunit tests/tracktime_additional_test.sh

    - name: Upload coverage reports (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30
      continue-on-error: true

    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **OS**: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY  
        echo "- **Bash Version**: $(bash --version | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Tests**: tracktime functionality and edge cases" >> $GITHUB_STEP_SUMMARY
        echo "- **Coverage**: Generated on Ubuntu, uploaded as artifact" >> $GITHUB_STEP_SUMMARY
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          echo "- **Coverage Report**: Available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
        fi
